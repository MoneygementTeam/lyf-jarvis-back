package com.moneygement.lyf.jarvis.travel.service;

import com.moneygement.lyf.jarvis.travel.domain.TravelPlanRequest;
import com.moneygement.lyf.jarvis.travel.domain.TravelPlanResponse;
import org.springframework.stereotype.Service;

@Service
public class TravelService {

    /**
     * 여행 계획 생성
     * @param request 여행 계획 요청 정보 (출발지 좌표, 음성 텍스트 등)
     * @return 최종 여행 계획 응답
     */
    public TravelPlanResponse createTravelPlan(TravelPlanRequest request) {
        // 1. Open AI API 호출하여 음성 텍스트를 자연스럽게 파싱 - 개떡같이 말해도 더 나은 명령으로
        String parsedVoiceText = callOpenAiForParsing(request.getVoiceText());

        // 2. RAG 추천 API 호출하여 여행 목적지 리스트 추천
        String[] pointList = callRagForPointPick(parsedVoiceText);

        // 3. Open AI API 호출하여 최적 경로 요청
        String optimalRoute = callOpenAiForOptimalRoute(request.getStartPoint(), pointList);

        // 4. 여행 계획 DTO 생성
        TravelPlanResponse travelPlanResponse = createTravelPlanResponse(request.getStartPoint(),
                                                                         pointList,
                                                                         optimalRoute);

        // 5. Open AI API 호출하여 여행 계획 DTO 기반 자연스러운 소개 문장 생성
        String introText = callOpenAiForIntroText(travelPlanResponse);

        // 6. Open AI TTS를 통해 Text to Speech (mp4 파일) 생성 및 S3 업로드
        String ttsUrl = generateTtsAndUpload(introText);

        // 7. 최종 응답 설정
        travelPlanResponse.setTtsUrl(ttsUrl);
        return travelPlanResponse;
    }

    /**
     * 1. OpenAI API 호출 - 음성 텍스트 파싱
     */
    private String callOpenAiForParsing(String voiceText) {
        //TODO (찬호) OpenAI API 호출 로직
        return "parsed command from OpenAI"; // 예시 반환값
    }

    /**
     * 2. RAG 추천 API 호출 - 추천 여행 목적지 리스트 응답
     */
    private String[] callRagForPointPick(String parsedText) {
        //TODO (찬미) RAG 호출 및 목적지 리스트 String[] 생성
        return new String[]{"Marina Bay Sands", "National University of Singapore", "jumboseafood Singapore"};
    }

    /**
     * 3. Open AI API 호출 - 최적 경로 생성
     */
    private String callOpenAiForOptimalRoute(String departureCoordinates, String[] recommendedDestinations) {
        //TODO (찬미) Open AI 최적 경로 요청 로직
        return "optimal route with shortest distance"; // 예시 반환값
    }

    /**
     * 4. 여행 계획 DTO 생성
     */
    private TravelPlanResponse createTravelPlanResponse(String startPoint, String[] pointList, String optimalRoute) {
        TravelPlanResponse response = new TravelPlanResponse();
        response.setStartPoint(startPoint);
        response.setPointList(pointList);
        response.setOptimalRoute(optimalRoute);
        return response;
    }

    /**
     * 5. OpenAI를 통해 여행 계획 소개 문장 생성
     */
    private String callOpenAiForIntroText(TravelPlanResponse travelPlanResponse) {
        //TODO (찬호) OpenAI API 호출 로직: 여행 계획을 자연스럽게 소개하는 문장 생성
        String introTemplate = String.format("저는 %s에서 출발하고 %s에 가려고 합니다. 최적 경로는 %s입니다.",
                                                    travelPlanResponse.getStartPoint(),
                                                    travelPlanResponse.getPointList(),
                                                    travelPlanResponse.getOptimalRoute());
        return "natural introduction generated by OpenAI";
    }

    /**
     * 6. Text to Speech 생성 및 파일 업로드
     */
    private String generateTtsAndUpload(String introText) {
        //TODO (찬호) TTS 생성 및 S3 업로드 로직
        return "s3 mp4 url";
    }
}
